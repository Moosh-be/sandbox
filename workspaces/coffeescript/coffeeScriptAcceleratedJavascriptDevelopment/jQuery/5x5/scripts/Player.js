// Generated by CoffeeScript 1.3.3
var Grid, Player, root, scoreMove, tileValues, _ref;

_ref = require('./Grid'), Grid = _ref.Grid, tileValues = _ref.tileValues;

scoreMove = function(dictionary, swapCoordinates) {
  var letter, moveScore, multiplier, newWords, word, words, x1, x2, y1, y2, _i, _j, _len, _len1;
  x1 = swapCoordinates.x1, y1 = swapCoordinates.y1, x2 = swapCoordinates.x2, y2 = swapCoordinates.y2;
  words = dictionary.wordsThroughTile(x1, y1).concat(dictionary.wordsThroughTile(x2, y2));
  moveScore = multiplier = 0;
  newWords = [];
  for (_i = 0, _len = words.length; _i < _len; _i++) {
    word = words[_i];
    if (!(dictionary.isWord(word) && dictionary.markUsed(word))) {
      continue;
    }
    multiplier++;
    for (_j = 0, _len1 = word.length; _j < _len1; _j++) {
      letter = word[_j];
      moveScore += tileValues[letter];
    }
    newWords.push(word);
  }
  moveScore *= multiplier;
  return {
    moveScore: moveScore,
    newWords: newWords
  };
};

Player = (function() {

  function Player(name, dictionary) {
    this.name = name;
    if (dictionary) {
      this.setDictionary(dictionary);
    }
  }

  Player.prototype.setDictionary = function(dictionary) {
    this.dictionary = dictionary;
    this.score = 0;
    return this.moveCount = 0;
  };

  Player.prototype.makeMove = function(swapCoordinates) {
    var result;
    this.dictionary.grid.swap(swapCoordinates);
    this.moveCount++;
    result = scoreMove(this.dictionary, swapCoordinates);
    this.score += result.moveScore;
    return result;
  };

  Player.prototype.toString = function() {
    var _ref1;
    return (_ref1 = this.name) != null ? _ref1 : 'Unnamed Player';
  };

  return Player;

})();

root = typeof exports !== "undefined" && exports !== null ? exports : window;

root.Player = Player;
